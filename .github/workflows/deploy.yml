name: Deploy

on:
   release:
     types: [released]
   workflow_dispatch:

defaults:
  run:
    shell: bash
    
jobs:
  deploy_test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    environment: test
    concurrency: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup NodeJS 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.7

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Compile TypeScript
        run: npm run compile

      - name: Build source
        run: devops/build_source.sh

      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile andelenergi-test
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile andelenergi-test
      - name: Apply terraform on test environment
        run: devops/deploy_terraform.sh test

  deploy_prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: prod
    concurrency: prod
    needs: [deploy_test]
    steps:
      - uses: actions/checkout@v3

      - name: Setup NodeJS 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.7

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Compile TypeScript
        run: npm run compile

      - name: Build source
        run: devops/build_source.sh
      
      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile andelenergi-prod
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile andelenergi-prod
      - name: Apply terraform on prod environment
        run: devops/deploy_terraform.sh prod
